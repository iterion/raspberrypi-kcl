// Some measurements done by hand, but most are taken from:
// https://datasheets.raspberrypi.com/rpi3/raspberry-pi-3-b-plus-product-brief.pdf


// Overall PCB dimensions
pcbLength = 85
pcbWidth = 56
pcbHeight = 1

// I want to alpha sort but this must come first
hdmiX = 32
mountingHoleOffset = 3.5
pinHeight = 8

avHeight = 6
avLength = 6
avOverhang = 2
avWidth = 14
avX = 53.3
cameraPlugHeight = 4.5
cameraPlugLength = 2
cameraPlugWidth = 20 // Dimensions for both camera and display 22-pin plugs
cameraX = hdmiX + 13 // reference drawing gave this in relation to hdmi
cameraY = 11.5
cornerRadius = 3
displayX = 3.5 // Display plug is on the left side of the board
displayY = 28
ethernetHeight = 13
ethernetLength = 21
ethernetOverhang = 1
ethernetWidth = 15
gpioHeight = pinHeight
gpioLength = 50
gpioWidth = 4
gpioX = mountingHoleOffset + 29
gpioY = pcbWidth - mountingHoleOffset
hdmiHeight = 5
hdmiLength = 15
hdmiOverhang = 1
hdmiWidth = 11
mountingHoleClearanceDiameter = 6
mountingHoleHorizontalSpacing = 58
mountingHoleRadius = 2.75 / 2
poeHeight = pinHeight
poeLength = 4
poeWidth = 4
poeX = mountingHoleOffset + 58
poeY = pcbWidth - 9.623
powerUsbHeight = 2.25
powerUsbLength = 6.5
powerUsbOverhang = 0.5
powerUsbWidth = 5
usbHeight = 15
usbLength = 17
usbOverhang = 1.5
usbWidth = 12

fn rectangle = (pos, rectLength, rectWidth, sketchStart) => {
  return startProfileAt(pos, %)
  |> angledLine([0, rectLength], %, $bottom)
  |> angledLine([segAng(bottom) + 90, rectWidth], %, $right)
  |> angledLine([segAng(bottom), -segLen(bottom)], %, $top)
  |> lineTo([profileStartX(%), profileStartY(%)], %, $left)
  |> close(%)
}

fn block = (pos, blockLength, blockWidth, blockHeight, sketchStart) => {
  return sketchStart
  |> rectangle(pos, blockLength, blockWidth, %)
  |> extrude(blockHeight, %)
}

fn rightOverhangingBlock = (blockY, blockOverhang, blockLength, blockWidth, blockHeight, sketchStart) => {
  return sketchStart
  |> block([
       pcbLength - blockLength + blockOverhang,
       blockY - (blockWidth / 2)
     ], blockLength, blockWidth, blockHeight, %)
}

fn bottomOverhangingBlock = (blockX, blockOverhang, blockLength, blockWidth, blockHeight, sketchStart) => {
  return sketchStart
  |> block([
       blockX - (blockLength / 2),
       -blockOverhang
     ], blockLength, blockWidth, blockHeight, %)
}

fn centeredBlock = (blockX, blockY, blockLength, blockWidth, blockHeight, sketchStart) => {
  return sketchStart
  |> block([
       blockX - (blockLength / 2),
       blockY - (blockWidth / 2)
     ], blockLength, blockWidth, blockHeight, %)
}

export fn raspberryPi3B = () => {
  pcbSketch = startSketchOn('XY')
    |> rectangle([0, 0], pcbLength, pcbWidth, %)
    |> hole(circle({
         center: [mountingHoleOffset, mountingHoleOffset],
         radius: mountingHoleRadius
       }, %), %)
    |> hole(circle({
         center: [
           mountingHoleOffset + mountingHoleHorizontalSpacing,
           mountingHoleOffset
         ],
         radius: mountingHoleRadius
       }, %), %)
    |> hole(circle({
         center: [
           mountingHoleOffset,
           pcbWidth - mountingHoleOffset
         ],
         radius: mountingHoleRadius
       }, %), %)
    |> hole(circle({
         center: [
           mountingHoleOffset + mountingHoleHorizontalSpacing,
           pcbWidth - mountingHoleOffset
         ],
         radius: mountingHoleRadius
       }, %), %)
  pcb = pcbSketch
    |> extrude(pcbHeight, %)
    |> fillet({
         radius: cornerRadius,
         tags: [
           getPreviousAdjacentEdge(pcbSketch.tags.top),
           getPreviousAdjacentEdge(pcbSketch.tags.bottom),
           getPreviousAdjacentEdge(pcbSketch.tags.right),
           getPreviousAdjacentEdge(pcbSketch.tags.left)
         ]
       }, %)

    // USB port blocks
  // There are two USB A ports stacked vertically.
  usbBlock1 = startSketchOn(pcb, 'END')
    |> rightOverhangingBlock(29, usbOverhang, usbLength, usbWidth, usbHeight, %)

  usbBlock2 = startSketchOn(pcb, 'END')
    |> rightOverhangingBlock(47, usbOverhang, usbLength, usbWidth, usbHeight, %)

  // Ethernet port
  ethernet = startSketchOn(pcb, 'END')
    |> rightOverhangingBlock(10.25, ethernetOverhang, ethernetLength, ethernetWidth, ethernetHeight, %)

  display = startSketchOn(pcb, 'END')
    |> centeredBlock(displayX, displayY, cameraPlugLength, cameraPlugWidth, cameraPlugHeight, %)

  powerUsb = startSketchOn(pcb, 'END')
    |> bottomOverhangingBlock(10.6, powerUsbOverhang, powerUsbLength, powerUsbWidth, powerUsbHeight, %)

  hdmi = startSketchOn(pcb, 'END')
    |> bottomOverhangingBlock(hdmiX, hdmiOverhang, hdmiLength, hdmiWidth, hdmiHeight, %)

  camera = startSketchOn(pcb, 'END')
    |> centeredBlock(cameraX, cameraY, cameraPlugLength, cameraPlugWidth, cameraPlugHeight, %)

  av = startSketchOn(pcb, 'END')
    |> bottomOverhangingBlock(avX, avOverhang, avLength, avWidth, avHeight, %)

  gpio = startSketchOn(pcb, 'END')
    |> centeredBlock(gpioX, gpioY, gpioLength, gpioWidth, gpioHeight, %)

  poe = startSketchOn(pcb, 'END')
    |> centeredBlock(poeX, poeY, poeLength, poeWidth, poeHeight, %)
}

raspberryPi3B()

